1. CSS有众多的选择器，什么时候应该用怎样的选择器才能让代码更加简洁？
尽可能准确而迅速的，可考虑直接设置id来实现，如果有同一种样式需要应用到许多元素上
可以创造一个类来实现一次性应用规则

2. 有哪些元素居中方法，他们分别适用于怎样的场景？
text-align，文本居中，水平居中
设置父元素display为flex，然后子元素justify-content: center;轮播图底部按钮所用
grid布局，可适合多列布局场景
绝对定位，利用top，left等，适合明确了用户屏幕大小时使用，也可使用%来响应式，
不过需要计算，如果很复杂就难以计算

3. CSS有哪些方法可以进行网页布局，请举例说明？
flexbox，水平，垂直居中都比较好实现
grid布局，可适合多列布局场景，精确控制
floa布局，代码简单，可让块实现左右分布，不过需要考虑清除浮动
position布局，精确计算每一块位置，

4. 为什么要对不同分辨率手机进行适配？常见的适配方案有哪些？
实现最好的效果，节约用户流量，加快网页的出现
媒体查询，@media来查询屏幕大小，进而使用不同css代码
加载图片可以提前准备好不同分辨率的图片，srcset属性进行设置
响应式布局，利用%来设定长宽高，弹性布局



1. JavaScript有哪些数据类型，与其他语言不同的地方在哪里？
string字符串，number数字，bool布尔类型，null，undefin，array数组，对象
number数字可储存表示数字，其他语言分整数，浮点数各种类型
null是空对象

2. 有哪些判断数据类型的方法，他们的优缺点是什么？
typeof，简单好用，不好区分数组和普通对象
instanceof，判断对象类型，数据类型不好判断
Array.isArray（）只能用于判断数组，代码少



1. 和CSS相比，使用DOM操作对元素进行样式修饰有什么优缺点，你更喜欢哪个？
DOM交互性更强，还能更新，如果有过多元素的话，可能影响页面性能

2. 接触了 JavaScript 操作 DOM 样式之后，有引发你关于 CSS 的思考吗
css静态工具很好用，但需要变化的时候还是得javascript
js也不应该做太多静态的事情



1.当父元素和子元素都绑定了事件，点击子元素的时候，哪一个事件会先发生？
都默认的情况下子元素先发生，false- false- 默认。
事件句柄在冒泡阶段执行，从子元素开始向上冒出
可改变useCapture参数，设置事件在捕获还是冒泡阶段执行

2.JS是单线程工作的，为何在我们与浏览器进行交互的过程中，网页可以同时进行一系列数据处理工作？
事件循环会不断检查是否有没做完的事件，没做完就调出来做
异步编程可以将耗时的工作延后做


1.通过编写.ignore文件，我们可以忽略掉部分文件（文件夹），假设现在有一个已经追踪的文件，将其添加到.ignore列表中，会发生什么？
.ignore可以告诉git那些文件应该被忽略，但是由于git已经追踪了，所以会继续追踪

2.发现一次提交漏掉了一些文件，或者 commit 内容写错了，最好怎么做？
进行版本回退，先给git log查看提交日志，选定好版本再git reset
3.生产时较少使用 reset，你认为会是什么原因呢？
完全覆盖了提交历史，如果已经提交到远程库，可能别人已经在开发了